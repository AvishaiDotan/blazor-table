@page "/"
<PageTitle>Index</PageTitle>

@inject HttpClient Http

@if (tableData == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <main @onclick="(e) => handleModalChanges()">
        <AppHeader />
        <section class="table-wrapper full">
            <table class="full">
                @if (tableData != null)
                {
                    <TableHeader TableHeaderData="tableData.tableHeader"
                         handleModalChanges="(idx, modalType, state) => handleModalChanges(idx, modalType, state)" />
                    <TableBody TableBodyData="tableData.tableBody" headers="GetHeader()" />
                }
            </table>
            <div class="height-filler">
            </div>
            <button @onclick="() => Console.WriteLine(JsonConvert.SerializeObject(tableData.tableBody, Formatting.Indented))">312#!#Print</button>
        </section>
    </main>




    @code {

    static TableData tableData;


    protected override async Task OnInitializedAsync()
    {
        tableData = await Http.GetFromJsonAsync<TableData>("sample-data/initalData.json");
        Console.WriteLine(JsonConvert.SerializeObject(tableData, Formatting.Indented));
        Console.WriteLine(System.Text.Json.JsonSerializer.Serialize(tableData));
    }

    public List<string> GetHeader()
    {
        List<string> result = new List<string>();

        foreach (TableHeaderClass header in tableData.tableHeader)
        {
            result.Add(header.value);
        }
        return result;
    }


    //public void HandleIncrementColumn(MouseEventArgs e)
    //{
    //    //if (e.Button == 0)
    //    //{
    //    //    tableData.tableHeader.Add("1");
    //    //    foreach (var row in tableData.tableBody)
    //    //    {
    //    //        row.Add("1");
    //    //    }
    //    //}
    //    //else if (e.Button == 2)
    //    //{
    //    //    Console.WriteLine("Modal");
    //    //}

    //}

    public void handleModalChanges(int idx = 0, string modalType = "isDirectionModalOpen", bool state = false)
    {
        foreach (var header in tableData.tableHeader)
        {
            header.GetType().GetProperty(modalType).SetValue(header, false, null);
        }

        tableData.tableHeader[idx].GetType().GetProperty(modalType).SetValue(tableData.tableHeader[idx], state, null);
        Console.WriteLine(JsonConvert.SerializeObject(tableData.tableHeader, Formatting.Indented));
        StateHasChanged();
    }

}
}


