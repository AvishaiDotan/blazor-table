<td 
    class="@((isFocusedCell ? "focused table-cell" : "table-cell"))"
    @onmousedown="handleMouseDown"
    oncontextmenu="return false;"
>
    <span>@innerText</span>

    @if (isModalOpen)
    {
        <section class="cell-modal"  style="top: @topPos; left: @leftPos">
            <span @onclick='() => handleClick("add", cellIdx)'>
                Add record above
            </span>
            <span @onclick='() => handleClick("add", cellIdx + 1)'>
                Add record below
            </span>
        </section>

    }
</td>


@code {
    string topPos = "0px";
    string leftPos = "0px";

    [Parameter]
    public Action<int, int, string> HandleTableBodyClick { get; set; }

    [Parameter]
    public Action<int> addNewRow { get; set; }

    [Parameter]
    public object innerText { get; set; }

    [Parameter]
    public int cellIdx { get; set; }

    [Parameter]
    public string cellHeader { get; set; }

    [Parameter]
    public bool isModalOpen { get; set; }

    [Parameter]
    public bool isFocusedCell { get; set; }


    public void handleMouseDown(MouseEventArgs e)
    {
        if (e.Button == 2)
        {
            topPos = $"{e.OffsetY}px";
            leftPos = $"{e.OffsetX}px";
            HandleTableBodyClick.Invoke(2, cellIdx, cellHeader);
        }
        else if(e.Button == 0)
        {
            HandleTableBodyClick.Invoke(0, cellIdx, cellHeader);
        }

    }

    public void handleClick(string type, int idx)
    {
        addNewRow.Invoke(idx);
    }
}
